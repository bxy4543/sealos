name: E2E Apply Test

on:
  workflow_call:
  pull_request:
    types:
      - opened
      - synchronize
      - labeled

jobs:
  call_ci_workflow:
    uses: ./.github/workflows/ci.yml
    if: ${{ contains(github.event.pull_request.labels.*.name, 'need-e2e-apply-test') }}

  e2e_apply_test:
    needs: [ call_ci_workflow ]
    runs-on: ubuntu-latest
    permissions:
      issues: write
    #    if: ${{ contains(github.event.pull_request.labels.*.name, 'need-e2e-apply-test') }}
    strategy:
      matrix:
        arch: [ arm64, amd64 ]
    outputs:
      test_result: ${{ steps.apply_test.outputs.test_result }}
    steps:
      - name: Run tests
        id: get_action_link
        env:
          github: ${{ toJson(github) }}
        run: |
          echo -e "\n\n\n\n\n $github \n\n\n\n\n"

      - name: Install Dependencies
        run: sudo apt update && sudo apt install -y libgpgme-dev libbtrfs-dev libdevmapper-dev

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Expose git commit data
        uses: rlespinasse/git-commit-data-action@v1

      - name: Download sealos
        uses: actions/download-artifact@v3
        with:
          name: sealos-${{ matrix.arch }}
          path: /tmp/sealos/bin/

      - name: Download sealos
        uses: actions/download-artifact@v3
        with:
          name: patch-image-${{ matrix.arch }}.tar
          path: /tmp/sealos/images/

      - name: Install ginkgo && Run e2e apply test
        id: apply_test
        shell: bash
        run: |
          set -ex
          echo "job name: ${{ github.job }}"
          gzip /tmp/sealos/images/patch-${{ matrix.arch }}.tar
          ls -Rl /tmp/sealos
          wget -qO goNew.tgz https://go.dev/dl/go1.20.linux-amd64.tar.gz && tar -zxf goNew.tgz && rm -rf goNew.tgz
          sudo mkdir -p /tmp/golang && sudo mv go /tmp/golang && sudo mkdir -p /opt/gopath/{bin,src,pkg}
          export GOROOT=/tmp/golang/go && export GOPATH=/opt/gopath
          export PATH="$PATH:$GOPATH/bin:$GOROOT/bin"
          echo "SEALOS_E2E_TEST_IMAGE_NAME=hub.sealos.cn/labring/kubernetes:v1.25.6"
          echo "SEALOS_E2E_TEST_PATCH_IMAGE_TAR=/tmp/sealos/images/patch-${{ matrix.arch }}.tar.gz"
          echo "SEALOS_E2E_TEST_PATCH_IMAGE_NAME=ghcr.io/labring/sealos-merge-patch:${{ env.GIT_COMMIT_SHORT_SHA }}-${{ matrix.arch }}"
          echo "SEALOS_E2E_TEST_SEALOS_BIN_PATH=/tmp/sealos/bin/sealos"
          echo "ALIYUN_ACCESS_KEY_ID=${{ secrets.ALIYUN_ACCESS_KEY_ID }}"
          echo "ALIYUN_ACCESS_KEY_SECRET=${{ secrets.ALIYUN_ACCESS_KEY_SECRET }}"
          echo "ALIYUN_RESOURCE_GROUP_ID=${{ secrets.ALIYUN_RESOURCE_GROUP_ID }}"
          echo "ALIYUN_REGION_ID=cn-hangzhou"
          set +e
          sudo SEALOS_E2E_TEST_IMAGE_NAME="hub.sealos.cn/labring/kubernetes:v1.25.6" \
            SEALOS_E2E_TEST_PATCH_IMAGE_TAR="/tmp/sealos/images/patch-${{ matrix.arch }}.tar.gz" \
            SEALOS_E2E_TEST_PATCH_IMAGE_NAME="ghcr.io/labring/sealos-merge-patch:${{ env.GIT_COMMIT_SHORT_SHA }}-${{ matrix.arch }}" \
            SEALOS_E2E_TEST_SEALOS_BIN_PATH="/tmp/sealos/bin/sealos" \
            ALIYUN_ACCESS_KEY_ID="${{ secrets.ALIYUN_ACCESS_KEY_ID }}" \
            ALIYUN_ACCESS_KEY_SECRET="${{ secrets.ALIYUN_ACCESS_KEY_SECRET }}" \
            ALIYUN_RESOURCE_GROUP_ID="${{ secrets.ALIYUN_RESOURCE_GROUP_ID }}" \
            ALIYUN_REGION_ID=cn-hangzhou /tmp/golang/go/bin/go run github.com/onsi/ginkgo/v2/ginkgo -v --focus="apply test" test/e2e/
          if [ $? -eq 0 ]; then
              echo "test_result='${{ matrix.arch }} test success'" >> "$GITHUB_OUTPUT"
          else
              echo "test_result='${{ matrix.arch }} test failure'" >> "$GITHUB_OUTPUT"
          fi

  issue_commit:
    needs: [ e2e_apply_test ]
    runs-on: ubuntu-latest
    permissions:
      issues: write
    if: ${{ always() }}
    steps:
      - name: Add comment to PR with test status
        uses: peter-evans/create-or-update-comment@v1
        id: check-result
        env:
          result: ${{ needs.e2e_apply_test.outputs.test_result }}
        with:
          issue-number: ${{ github.event.number }}
          comment-author: 'github-actions[bot]'
          repository: ${{ github.repository }}
          body: |
            AUTO COMMIT: E2E Apply Test Result: ${{ needs.e2e_apply_test.outputs.test_result }} [View Action Details](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          token: "${{ secrets.GH_PAT }}"


#  issue_commit:
#    needs: [ e2e_apply_test ]
#    if: ${{ contains(github.event.pull_request.labels.*.name, 'need-e2e-apply-test') }}
#    #    needs:
#    #      - e2e_apply_test
#    runs-on: ubuntu-latest
#    permissions:
#      issues: write
#
#    steps:
#      - name: Add comment to PR with test status
#        uses: peter-evans/create-or-update-comment@v1
#        if: ${{ always() }}
#        id: check-result
#        env:
#          result: ${{needs.e2e_apply_test.outputs.test_result}}
#        with:
#          issue-number: ${{ github.event.number }}
#          comment-author: 'github-actions[bot]'
#          repository: ${{ github.repository }}
#          body: |
#            AUTO COMMIT: E2E Apply Test Result: ${{needs.e2e_apply_test.outputs.test_result}} [View Action Details](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
#          token: "${{ secrets.GH_PAT }}"
#

#  e2e_apply_test:
#    runs-on: ubuntu-latest
#    if: ${{ contains(github.event.pull_request.labels.*.name, 'need-e2e-apply-test') }}
#    permissions:
#      issues: write
#      pull-requests: write
#    outputs:
#      action_link: ${{ steps.get_action_link.outputs.action_link }}
#      issue_number: ${{ steps.get_issue_number.outputs.issue_number }}
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      - name: Run tests
#        id: get_action_link
#        env:
#          github: ${{ toJson(github) }}
#        run: |
#          sudo echo "result=success" > result.txt
#          echo -e "\n\n\n\n\n $github \n\n\n\n\n"
#
#
#
#  #      - name: Add comment to PR with test status
#  #        if: ${{ always() }} # Ensure this step runs even if previous steps failed
#  #        uses: actions/github-script@v6
#  #        with:
#  #          github-token: ${{ secrets.GITHUB_TOKEN }}
#  #          script: |
#  #            const issue_number = context.issue.number;
#  #            const fs = require('fs');
#  #            const test_result = fs.readFileSync('result.txt', 'utf-8');
#  #            const success = test_result.trim() === 'success';
#  #            const comment_body = success ? 'E2E Apply Test: Success' : 'E2E Apply Test: Failed';
#  #            const action_link = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
#  #
#  #            await github.rest.issues.createComment({
#  #              ...context.repo,
#  #              issue_number,
#  #              body: `${comment_body}\n[Action link](${action_link})`
#  #            });
#
#  issue_commit:
#    if: ${{ contains(github.event.pull_request.labels.*.name, 'need-e2e-apply-test') }}
#    #    needs:
#    #      - e2e_apply_test
#    runs-on: ubuntu-latest
#    permissions:
#      issues: write
#    outputs:
#      action_link: ${{ steps.get_action_link.outputs.action_link }}
#    steps:
#      - name: Wait for comment triggered workflow to complete
#        if: ${{ always() }}
#        uses: fountainhead/action-wait-for-check@v1.0.0
#        id: wait-for-check
#        with:
#          token: ${{ secrets.GITHUB_TOKEN }}
#          checkName: "e2e_apply_test" # Replace with the name of the job in your comment triggered workflow
#          ref: ${{ github.event.pull_request.head.sha }}
#          waitFor: '100000000' # milliseconds between check for completion
#          timeout: '18000000000' # milliseconds to wait before timing out
#
#      - name: Add comment to PR with test status
#        uses: peter-evans/create-or-update-comment@v1
#        if: ${{ always() }}
#        with:
#          issue-number: ${{ github.event.number }}
#          comment-author: 'github-actions[bot]'
#          repository: ${{ github.repository }}
#          body: |
#            AUTO COMMIT: ${{ github.workflow }}: ${{ needs.e2e_apply_test.conclusion == 'failure' && 'Failure' || 'Success' }} [Action link](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
#          token: "${{ secrets.GH_PAT }}"
